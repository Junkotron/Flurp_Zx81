


module cmdline
  (clock,
   reset,
   receive_data,
   recv_strobe,

   send_data,
   send_strobe);

   input clock;
   input reset;
   input [7:0] receive_data;
   input       recv_strobe;
   output reg [7:0] send_data;
   input 	    send_strobe;

   reg 		    old_recv_strobe=0;
   reg 		    old_send_strobe=0;

   reg [4:0] 	    state=0;

   parameter idle = 5'b00000;
   parameter halt = 5'b00001; // Halt the z80 cpu
   parameter halt_busak = 5'b00010; // wait for busak
   parameter send_ok = 5'b00011; // wait for busak

   reg [1:0] 	    msgpek=0;
   
   
   always @(posedge clock)
     begin
	// Incoming char
	if (recv_strobe == 1 && old_recv_strobe == 0)
	  begin
	     old_recv_strobe = 1;
	     
	     case (receive_data)
	       'h': state = halt;
	     endcase
	  end
	else
	  begin
	     case (state)
	       halt:
		 begin
		    busrq_n<=0;
		    state = halt_busak;
		 end
	       halt_busak:
		 begin
		    if (busak_n = 0)
		      state = send_ok;
		 end
	       send_ok:
		 begin
		    if (send_strobe = 1 && old_send_strobe = 0)
		      begin
			 case (msgpek)
			   0: send_data='O';
			   1: send_data='K';
			   2: send_data=10;
			   3: state=idle;
			 endcase
		      end
		    else
		      old_send_strobe = send_strobe;
		 end
	     endcase
	  end
     end
endmodule
